% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getResult.R
\name{getResult}
\alias{getResult}
\title{Get data on samples from HoloFood database}
\usage{
getResult(accession, ...)
}
\arguments{
\item{accession}{\code{Character vector} specifying the
accession IDs of type samples.}

\item{...}{optional arguments:
\itemize{

  \item{\code{use.cache}: }{\code{Logical scalar} specifying whether to
  use.cache (Default: \code{FALSE})}

  \item{\code{cache.dir}: }{\code{Character scalar} specifying cache directory.
  (Default: \code{tempdir()})}

  \item{\code{clear.cache}: }{\code{Logical scalar} specifying whether to
  use.cache (Default: \code{FALSE})}

}}
}
\value{
\code{MultiAssayExperiment}
}
\description{
Get data on samples from HoloFood database
}
\details{
With \code{getResult}, you can fetch data on samples from the HoloFood
database. Compared to \code{getData}, this function is more convenient for
fetching the samples data because it converts the data to
\code{MultiAssayExperiment} where different omics are stored as
\code{SummarizedExperiment} objects which are optimized for downstream
analytics.

Moreover, HoloFoodR database does not include metagenomic assembly data, but
you can fetch the data from MGnify database. For easy access to the database
you can utilize MGnifyR package. \code{MGnifyR::getResult()} returns data
also as \code{MultiAssayExperiment} object containing multiple
\code{TreeSummarizedExperiment} objects. This means that the data from
HoloFood and MGnify databases are directly compatible for downstream
analytics.
}
\examples{

# Find samples on certain animal
samples <- doQuery("samples", animal_accession = "SAMEA112904746")

# Get the data
res <- getResult(samples[["accession"]])
res

}
\seealso{
\code{\link[HoloFoodR:getData]{getData}}
\code{\link[SummarizedExperiment:SummarizedExperiment-class]{SummarizedExperiment}}
\code{\link[MultiAssayExperiment:MultiAssayExperiment-class]{MultiAssayExperiment}}
\code{\link[MGnifyR:getResult]{MGnifyR:getResult}}
}
