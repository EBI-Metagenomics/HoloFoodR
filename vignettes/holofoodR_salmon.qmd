---
title: "ECCB Paper - Salmon"
format: html
---

```{r}
library(HoloFoodR)
library(MGnifyR)
library(dplyr)
library(knitr)

# Create cache directories
holofood_cache_dir <- file.path("..", ".HoloFoodR_cache")
if (!dir.exists(holofood_cache_dir)) {
  dir.create(holofood_cache_dir, recursive = TRUE)
}
mgnify_cache_dir <-  file.path("..", ".MGnifyR_cache")
if (!dir.exists(mgnify_cache_dir)) {
  dir.create(mgnify_cache_dir, recursive = TRUE)
}

# Get salmon samples
salmons <- HoloFoodR::doQuery("animals", system = "salmon", use.cache = TRUE, cache.dir = holofood_cache_dir)

# Get only salmon metagenomic and fatty acid data
salmons <- salmons |>
  filter(fatty_acids == TRUE & metagenomic_assembly == TRUE)
```

```{r}
# Get salmon data
salmon_data <- HoloFoodR::getData(
  accession.type = "animals",
  accession = salmons[["accession"]],
  use.cache = TRUE,
  cache.dir = holofood_cache_dir
)

# Get salmon samples
salmon_samples <- salmon_data[["samples"]]

# Get sample IDs
salmon_sample_ids <- unique(salmon_samples[["accession"]])
```



```{r}
# Get salmon MAE experiments as MAE object
salmon_mae <- HoloFoodR::getResult(
  salmon_sample_ids,
  use.cache = TRUE,
  cache.dir = holofood_cache_dir
)

# Save salmon MAE
saveRDS(object = salmon_mae,
        file = "../inst/extdata/salmon_mae_without_mgnify.RDS")
```

```{r}
# Fetch available salmon experiments
experiments(salmon_mae)
```

Note that only the "FATTY ACIDS MG", "FATTY ACIDS PERCENTAGE", "IODINE", and
"METABOLOMIC" experiments include a `counts` assay.

It is possible to inspect a `SummarizedExperiment` object and its count data.
In this case, the "count" data is concentrations of fatty acids (mg/ml).

```{r}
# Fetch FATTY ACIDS MG SummarizedExperiment
fatty_acids_mg_tse <- getWithColData(salmon_mae, "FATTY ACIDS MG")
assay(fatty_acids_mg_tse, "counts", withDimnames = TRUE)[0:10, ] |> kable("pipe")
```

## Fetch metagenomic data from MGnify

HoloFood database does not include the data for metagenomic assemblies which
can be retrieved from [MGnify portal](https://www.ebi.ac.uk/metagenomics).

```{r}
# Create MGnify object
mg_salmon <- MgnifyClient(
  useCache = TRUE,
  cacheDir = mgnify_cache_dir
  )

# Select only metagenomic assembly samples types
metagenomic_salmon_samples <- salmon_samples[
    salmon_samples[["sample_type"]] == "metagenomic_assembly", ]

# Search for sample IDs in MGnify database
salmon_analysis_ids <- searchAnalysis(
  mg_salmon,
  type = "samples",
  metagenomic_salmon_samples[["accession"]]
)
```

```{r}
# Get MAE metagenomic taxonomic data for salmon from MGnify
salmon_metagenomic_tse <- MGnifyR::getResult(
  x = mg_salmon,
  accession = salmon_analysis_ids,
  get.func = FALSE
)

# Save salmon_metagenomic_tse
saveRDS <- saveRDS(object = salmon_metagenomic_tse,
                   file = "../inst/extdata/salmon_metagenomic_tse.RDS")
```

```{r}
# Convert analysis names to sample names
salmon_sample_id <-
  names(salmon_analysis_ids)[
    match(
      colnames(salmon_metagenomic_tse),
      salmon_analysis_ids
    )
  ]

# Change MGnify analysis IDs to HoloFood sample IDs
colnames(salmon_metagenomic_tse) <- salmon_sample_id

# Merge add MGnify metagenomic data to the existing metagenomic_assembly experiment
tse1 <- salmon_metagenomic_tse
tse2 <- salmon_mae[["metagenomic_assembly"]]

# Combine sample metadata
cd1 <- as.data.frame(colData(tse1))
cd2 <- as.data.frame(colData(tse2))
cd <- merge(cd1, cd2,
            by.x = "sample_biosample",
            by.y = "accession",
            all.x = TRUE
)
rownames(cd) <- cd[["sample_biosample"]]

# Now order colData to ensure that order is correct
cd <- cd[colnames(tse1), ]

# Add it to TreeSE
colData(tse1) <- DataFrame(cd, check.names = FALSE)

# Rename to match Holofood
colnames(tse1) <- colData(tse1)[["sample_biosample"]]

# Now order the data based on TreeSE in MAE
# First take those columns that can be found
salmon_mae[["metagenomic_assembly"]] <- salmon_mae[["metagenomic_assembly"]][ , colnames(salmon_mae[["metagenomic_assembly"]]) %in% colnames(tse1) ]

# Then order
tse1 <- tse1[, match(colnames(salmon_mae[["metagenomic_assembly"]]), colnames(tse1))]
# And add to MAE in place of old experiment
salmon_mae[["metagenomic_assembly"]] <- tse1

# Save to merged MAE object to RDS
saveRDS(object = salmon_mae,
        file = "../inst/extdata/salmon_mae.RDS")
```
